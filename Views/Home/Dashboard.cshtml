@model BugTracker.Models.ViewModels.DashboardViewModel
@using BugTracker.Models.Enums
@using Microsoft.AspNetCore.Identity
@using BugTracker.Services.Interfaces

@inject UserManager<BTUser> UserManager
@inject IBTRolesService RolesService
@{
    ViewData["Title"] = "Dashboard";
    BTUser user = await UserManager.GetUserAsync(User);
}

<style>
    .amDark {
        background-color: #30303d;
        color: #fff;
    }

    #chartdiv {
        width: 100%;
        height: 300px;
    }
</style>

<h1>Dashboard</h1>
<a href="javascript:void(0)">
    @if(user?.AvatarFileData is not null)
	{
		<img class="media-object" src="data:image/*;base64,@(Convert.ToBase64String(user.AvatarFileData))" alt="Avatar"/>
	}
	else
	{
		<img class="media-object" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" style="width:30px;height:30px;"/>
	}
</a>

<strong>@user.FullName</strong>
<span class="text-muted" style="font-size:x-small">
    <strong>@Model.Company.Name</strong>
</span>

<div>
    <div classxfont-weighteighteightgetainer-fluid">

        <!--Info Pills-->
        <div class="row mt-2">
            <div class="col-lg-3 col-md-6 col-sm-6">
                <a asp-action="AllProjects" asp-controller="Projects" style="text-decoration:none">
                    <div class="card text-center bg-info">
                        <div class="body">
                            <div class="p-15 text-light">
                                <h3>@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
                                <span>Active Projects</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6">
                <a asp-action="AllTickets" asp-controller="Tickets" style="text-decoration:none">
                    <div class="card text-center bg-secondary">
                        <div class="body">
                            <div class="p-15 text-light">
                                <h3>@Model.Tickets.Count</h3>
                                <span>Total Tickets</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>

            <div class="col-lg-3 col-md-6 col-sm-6">
                <div class="card text-center bg-warning">
                    <div class="body">
                        <div class="p-15 text-light">
                            <h3>@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h3>
                            <span>Unassigned Tickets</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6 col-sm-6">
                <div class="card text-center bg-dark">
                    <div class="body">
                        <div class="p-15 text-light">
                            <h3>
                                @(Model.Projects.Count() + Model.Tickets.Count() + Model.Members.Count())
                            </h3>
                            <span>Total Data</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row gy-2">
            <div class="col-md-12 col">
                <div class="row col-cols-4 mt-5 bg-secondary">
                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <h5>Projects by Priority</h5>
                            <p>[Google Charts]</p>
                            <div id="chart3D"></div>
                        </div>
                    </div>
                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <h5>Project Tickets Count(%)</h5>
                            <p>[Google Charts]</p>
                            <div id="donut"></div>
                        </div>
                    </div>
                    <div class="card col m-1 p-2">
						<div class="card-body">
							<h5>Tickets by Priority</h5>
							<p>[Morris Charts]</p>
                            <!-- Morris: Donut -->
                            <div class="col-md-12">
                                <div id="legend" class="donut-legend" style="font-size:x-small"></div>
                            </div>
                            <div class="col-md-12">
                                <div class="chart chart-md" id="morrisTicketPriority"></div>
                            </div>
						</div>
					</div>
					<div class="card col m-1 p-2">
						<div class="card-body">
							<h5>Tickets by Status</h5>
                            <p>[ChartJS]</p>
                            <div class="col-md-12">
                                <!--ChartJS Canvas Tag-->
                                <canvas id="donutChart"></canvas>
                            </div>
						</div>
					</div>

                </div>
            </div>
        </div>
        <div class="row gy-2">
            <div class="col-sm mt-5 bg-secondary">
                <div class="card col m-1 p-2">
                    <div class="card-body" style="height:380px">
                        <h5>Project: Tickets vs Developers</h5>
                        <p>[amCharts]</p>
                        <div id="chartdiv"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="mt-5">
        <div class="row">
            <div class="col">
                <div class="bg-secondary">
                    <div class="card m-1 p-2">
                        <div class="card-header">
                            <h2>Projects</h2>
                        </div>
                        <div class="card-body" style="overflow-y:auto;">
                            <table class="table table-hover">
                                <thead class="">
                                    <tr>
                                        <th>Name</th>
                                        <th>StartDate</th>
                                        <th>EndDate</th>
                                        <th>Priority</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                @foreach (var project in Model.Projects.OrderByDescending(d => d.EndDate))
                                {
                                    <tr>
                                        <td><a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" style="color:black"><strong>@project.Name</strong></a></td>
                                        <td><span style="font-size:small">@project.StartDate.ToString("MM.dd.yyyy")</span></td>
                                        <td><span style="font-size:small">@project.EndDate.ToString("MM.dd.yyyy")</span></td>
                                        <td><span class="badge bg-dark">@project.ProjectPriority?.Name</span></td>
                                        <td>
                                            <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id"><i class="fs-5 bi-justify"></i></a>
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                        <div class="card-footer">

                        </div>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="bg-secondary">
                    <div class="card m-1 p-2">
                        <div class="card-header">
                            <h2>Tickets</h2>
                        </div>

                        <div class="card-body">
                            <div class="table-responsive" style="overflow-y:auto;height:400px;">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Title</th>
                                            <th>Developer</th>
                                            <th>Status</th>
                                            <th>Priority</th>
                                            <th>Date</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    @foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
                                    {
                                        <tr>
                                            <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
                                            <td>
                                                @if (ticket.DeveloperUserId != null)
                                                {
                                                    @ticket.DeveloperUser?.FullName
                                                }
                                                else
                                                {
                                                    <span class="badge bg-warning text-dark">Unassigned</span>
                                                }
                                            </td>
                                            @if (ticket.TicketStatus.Name == "New")
                                            {
                                                <td><span class="badge bg-success rounded-pill">@ticket.TicketStatus.Name </span></td>
                                            }
                                            else
                                            {
                                                <td><span class="badge bg-secondary rounded-pill">@ticket.TicketStatus.Name</span></td>
                                            }
                                            <td><span class="badge bg-dark">@ticket.TicketPriority.Name </span></td>
                                            <td><span style="font-size:small">@ticket.Created.ToString("MM-dd-yyyy")</span></td>
                                            <td>
                                                <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
                                            
                                            </td>
                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="card-footer">

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="bg-dark">
                    <div class="card m-1 p-2">
                        <div class="card-header">
                            <h2>Members</h2>
                            <hr />
                        </div>
                         <div style="overflow-y:auto;height:400px;">
                            <div class="card-body" style="background-color:antiquewhite">
                                @foreach(BTUser member in Model.Members)
                                {
                                    <div class="">
                                        <span style="font-weight:bold">@member.FullName</span>
                                        <h6>@((await RolesService.GetUserRolesAsync(member)).FirstOrDefault())</h6>
                                    </div>
                                    <hr />
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{

    <!--Google Charts-->
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>

    <!--GglProjectPriority3D-->
    <script type="text/javascript">
	    google.load("visualization", "1", { packages: ["corechart"] });
	    google.setOnLoadCallback(drawChart);
	    function drawChart() {
		    $.ajax({
			    type: "POST",
			    url: "/Home/GglProjectPriority",
			    data: '{}',
			    contentType: "application/json; charset=utf-8",
			    dataType: "json",
			    success: function (result) {
				    var data = google.visualization.arrayToDataTable(result);

				    //3D Pie
				    var options = {
					    title: 'Project Priority',
					    is3D: true,
					    chartArea: { left: 0,bottom: 15,width: '100%', height: '100%'},
					    legend: { position: 'bottom' }

				    };

				    var chart = new google.visualization.PieChart($("#chart3D")[0]);
				    chart.draw(data, options);
			    },
			    failure: function (rresult) {
				    alert(result.d);
			    },
			    error: function (result) {
				    alert(result.d);
			    }
		    });
	    }
    </script>

    <!--GglProjectPriorityFlat-->
    <script type="text/javascript">
	    google.load("visualization", "1", { packages: ["corechart"] });
	    google.setOnLoadCallback(drawChart);
	    function drawChart() {
		    $.ajax({
			    type: "POST",
			    url: "/Home/GglProjectPriority",
			    data: '{}',
			    contentType: "application/json; charset=utf-8",
			    dataType: "json",
			    success: function (result) {
				    var data = google.visualization.arrayToDataTable(result);

				    //Donut
				    var options = {
					    title: 'Company Ticket Distribution',
					    pieHole: 0.3,
					    chartArea: { left: 0,bottom: 15,width: '100%', height: '100%'},
					    legend: { position: 'bottom' }
				    };
				    var chart = new google.visualization.PieChart($("#donut")[0]);
				    chart.draw(data, options);
			    },
			    failure: function (rresult) {
				    alert(result.d);
			    },
			    error: function (result) {
				    alert(result.d);
			    }
		    });
	    }
    </script>

    @* Morris Donut Chart *@
    <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
    <script>

	    var morrisDonutData = [{
		    label: "Low",
		    value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Low)).Count()
	    }, {
		    label: "Medium",
		    value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Medium)).Count()
	    }, {
		    label: "High",
		    value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.High)).Count()
	    }, {
		    label: "Urgent",
		    value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Urgent)).Count()
	    }];


	    /*
	    Morris: Donut
	    */
	    if ($('#morrisTicketPriority').get(0)) {
		    var donutChart = Morris.Donut({
			    resize: true,
			    element: 'morrisTicketPriority',
			    data: morrisDonutData,
			    colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
		    });

		    donutChart.options.data.forEach(function(label, i) {
			    var legendItem = $('<span></span>').text( label['label'] + ": " +label['value']).prepend('<span>&nbsp;</span>');
			    legendItem.find('span')
			      .css('backgroundColor', donutChart.options.colors[i])
			      .css('width', '20px')
			      .css('display', 'inline-block')
			      .css('margin', '10px');
			    $('#legend').append(legendItem)
		    });
	    };
    </script>

    @*ChartsJS Donut Chart*@
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
    <script>
        var donutChartCanvas = $('#donutChart').get(0).getContext('2d');
        var donutData = {
            labels: [
                '@nameof(BTTicketStatus.Development)',
                '@nameof(BTTicketStatus.New)',
                '@nameof(BTTicketStatus.Resolved)',
                '@nameof(BTTicketStatus.Testing)'
            ],
            datasets: [
                {
                    data: [
                        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.Development)).Count(),
                        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.New)).Count(),
                        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.Resolved)).Count(),
                        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.Testing)).Count()
                    ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
					    'rgba(54, 162, 235, 0.2)',
					    'rgba(255, 206, 86, 0.2)',
					    'rgba(75, 192, 192, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
					    'rgba(54, 162, 235, 1)',
					    'rgba(255, 206, 86, 1)',
					    'rgba(75, 192, 192, 1)'
                    ]
                }
            ]
        };

        var donutOptions = {
            maintainAspectRatio: false,
            responsive: true
        };

        //Create pie or donut chart
        new Chart(donutChartCanvas, {
            type: 'doughnut',
            data: donutData,
            options: donutOptions
        
        });
    </script>

    @*AM Chart*@
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>
    <script>
    
    	$.ajax({
		type: "POST",
		url: "/Home/AmCharts",
		data: '{}',
		contentType: "application/json; charset=utf-8",
		dataType: "json",
		success: function (result) {
			am4core.ready(function() {

				// Themes begin
				// Themes end

				 // Create chart instance
				var chart = am4core.create("chartdiv", am4charts.XYChart);


				// Add data
				chart.data = result;

				// Create axes
				var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
				categoryAxis.dataFields.category = "project";
				categoryAxis.numberFormatter.numberFormat = "#";
				categoryAxis.renderer.inversed = true;
				categoryAxis.renderer.grid.template.location = 0;
				categoryAxis.renderer.cellStartLocation = 0.1;
				categoryAxis.renderer.cellEndLocation = 0.9;

				var  valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
				valueAxis.renderer.opposite = true;

				// Create series
				function createSeries(field, name) {
				  var series = chart.series.push(new am4charts.ColumnSeries());
				  series.dataFields.valueX = field;
				  series.dataFields.categoryY = "project";
				  series.name = name;
				  series.columns.template.tooltipText = "{name}: [bold]{valueX}[/]";
				  series.columns.template.height = am4core.percent(100);
				  series.sequencedInterpolation = true;

				  var valueLabel = series.bullets.push(new am4charts.LabelBullet());
				  valueLabel.label.text = "{valueX}";
				  valueLabel.label.horizontalCenter = "left";
				  valueLabel.label.dx = 10;
				  valueLabel.label.hideOversized = false;
				  valueLabel.label.truncate = false;

				  var categoryLabel = series.bullets.push(new am4charts.LabelBullet());
				  categoryLabel.label.text = "{name}";
				  categoryLabel.label.horizontalCenter = "right";
				  categoryLabel.label.dx = -10;
				  categoryLabel.label.fill = am4core.color("#fff");
				  categoryLabel.label.hideOversized = false;
				  categoryLabel.label.truncate = false;
				}

				createSeries("tickets", "Tickets");
				createSeries("developers", "Devs");

			}); 


		},
		failure: function (result) {
			alert(result.d);
		},
		error: function (result) {
			alert(result.d);
		}
	});
</script>
}
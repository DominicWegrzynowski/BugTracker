@model BugTracker.Models.ViewModels.DashboardViewModel
@using BugTracker.Extensions
@using BugTracker.Models.Enums
@using Microsoft.AspNetCore.Identity
@using BugTracker.Services.Interfaces

@inject UserManager<BTUser> UserManager
@inject IBTRolesService RolesService
@inject IBTProjectService ProjectService
@{
    ViewData["Title"] = "Dashboard";
    BTUser user = await UserManager.GetUserAsync(User);
    int companyId = User.Identity.GetCompanyId().Value;
}

<style>
    .amDark {
        background-color: #30303d;
        color: #fff;
    }

    #am-chart {
        width: 100%;
        height: 500px;
    }
</style>

<div class="app-wrapper">
    <div class="app-content pt-3 p-md-3 p-lg-4">
        <div class="container-xl">
            <h1 class="app-page-title">Dashboard</h1>

            <!--TOP ROW-->
            <!--GENERAL STATS-->
            <div class="row g-4 mb-4">
                <div class="col-6 col-lg-3">
                    <div class="app-card app-card-stat shadow-sm h-100">
                        <a asp-action="AllProjects" asp-controller="Projects">
                            <div class="card-body p-3 p-lg-4">
                                <h4 class="stats-type mb-1">Active Projects</h4>
                                <div class="stats-figure">@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</div>
                            </div>
                        </a>
                    </div>
                </div>
                <div class="col-6 col-lg-3">
                    <div class="app-card app-card-stat shadow-sm h-100">
                        <a asp-action="AllTickets" asp-controller="Tickets">
                            <div class="card-body p-3 p-lg-4">
                                <h4 class="stats-type mb-1">Total Tickets</h4>
                                <div class="stats-figure">@Model.Tickets.Count()</div>
                            </div>
                        </a>
                    </div>
                </div>
                <div class="col-6 col-lg-3">
                    <div class="app-card app-card-stat shadow-sm h-100">
                        <a asp-action="UnassignedTickets" asp-controller="Tickets">
                            <div class="card-body p-3 p-lg-4">
                                <h4 class="stats-type mb-1">Unassigned Tickets</h4>
                                <div class="stats-figure">@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</div>
                            </div>
                        </a>
                    </div>
                </div>
                <div class="col-6 col-lg-3">
                    <div class="app-card app-card-stat shadow-sm h-100">
                        <div class="card-body p-3 p-lg-4">
                            <h4 class="stats-type mb-1">Analytics</h4>
                            <div class="stats-figure">@(Model.Projects.Count() + Model.Tickets.Count() + Model.Members.Count())</div>
                        </div>
                    </div>
                </div>
            </div>
            <!--SECOND ROW-->
            <!--USER STATS-->
            <div class="row g-4 mb-4">
                <div class="col-6 col-lg-3">
                    <div class="app-card app-card-stat shadow-sm h-100">
                        <div class="card-body p-3 p-lg-4">
                            <div class="row d-flex">
                                <div class="col-2">
                                    <span>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-fill" viewBox="0 0 16 16">
                                            <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
                                        </svg>
                                    </span>
                                </div>
                                <div class="col-10">
                                    <div class="row">
                                        <div class="col-5">
                                            <p class="small">New Users</p>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-2">
                                            <h5 class=""><strong>0</strong></h5>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <hr />

                            <div class="row d-flex">
                                <div class="col-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-people-fill" viewBox="0 0 16 16">
                                        <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
                                        <path fill-rule="evenodd" d="M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z"/>
                                        <path d="M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z"/>
                                    </svg>
                                </div>
                                <div class="col-10">
                                    <div class="row">
                                        <div class="col-5">
                                            <p class="small">Total Users</p>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-2">
                                            <h5 class=""><strong>0</strong></h5>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <hr />

                            <div class="row d-flex">
                                <div class="col-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-ticket-perforated" viewBox="0 0 16 16">
                                        <path d="M4 4.85v.9h1v-.9H4Zm7 0v.9h1v-.9h-1Zm-7 1.8v.9h1v-.9H4Zm7 0v.9h1v-.9h-1Zm-7 1.8v.9h1v-.9H4Zm7 0v.9h1v-.9h-1Zm-7 1.8v.9h1v-.9H4Zm7 0v.9h1v-.9h-1Z"/>
                                        <path d="M1.5 3A1.5 1.5 0 0 0 0 4.5V6a.5.5 0 0 0 .5.5 1.5 1.5 0 1 1 0 3 .5.5 0 0 0-.5.5v1.5A1.5 1.5 0 0 0 1.5 13h13a1.5 1.5 0 0 0 1.5-1.5V10a.5.5 0 0 0-.5-.5 1.5 1.5 0 0 1 0-3A.5.5 0 0 0 16 6V4.5A1.5 1.5 0 0 0 14.5 3h-13ZM1 4.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v1.05a2.5 2.5 0 0 0 0 4.9v1.05a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-1.05a2.5 2.5 0 0 0 0-4.9V4.5Z"/>
                                    </svg>
                                </div>
                                <div class="col-10">
                                    <div class="row d-flex">
                                        <div class="col-12">
                                            <p class="small text-start">Tickets in Development</p>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-2 ">
                                            <h5 class=""><strong>@Model.Tickets.Where(t => t.DeveloperUserId is not null).Count()</strong></h5>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <hr />

                            <div class="row d-flex">
                                <div class="col-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-code-slash" viewBox="0 0 16 16">
                                        <path d="M10.478 1.647a.5.5 0 1 0-.956-.294l-4 13a.5.5 0 0 0 .956.294l4-13zM4.854 4.146a.5.5 0 0 1 0 .708L1.707 8l3.147 3.146a.5.5 0 0 1-.708.708l-3.5-3.5a.5.5 0 0 1 0-.708l3.5-3.5a.5.5 0 0 1 .708 0zm6.292 0a.5.5 0 0 0 0 .708L14.293 8l-3.147 3.146a.5.5 0 0 0 .708.708l3.5-3.5a.5.5 0 0 0 0-.708l-3.5-3.5a.5.5 0 0 0-.708 0z"/>
                                    </svg>
                                </div>
                                <div class="col-10">
                                    <div class="row">
                                        <div class="col-7">
                                            <p class="small">Total Developers</p>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-2">

                                           
                                        @{
                                            //Counting devs 
                                            List<BTUser> developers = await RolesService.GetUsersInRoleAsync(nameof(Roles.Developer), companyId);

                                            int developerCount = 0;

                                            foreach(BTUser developer in developers)
                                            {
                                                developerCount++;
                                            }

                                        }

                                            <h5 class=""><strong>@developerCount</strong></h5>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-6 col-lg-3">
                    <div class="app-card app-card-stat shadow-sm h-200" style="height:100%;">
                        <div class="card-body p-3 p-lg-4">
                                <div class="pb-3">
                                   <h5 class="">Company Data</h5>
                                   <h6 class="">@Model.Company.Name</h6>
                                </div>
                            <div class="row pt-2 pb-1 d-flex">
                                <div class="col-2">
                                    <span>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-people-fill" viewBox="0 0 16 16">
                                            <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
                                            <path fill-rule="evenodd" d="M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z"/>
                                            <path d="M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z"/>
                                        </svg>
                                    </span>
                                </div>
                                <div class="col-8 align-content-start justify-content-start text-start">
                                        <!--LINK TO LIST OF MEMBERS(needs to be developed)-->
                                    <a href="#">
                                        <p>Members</p>
                                    </a>
                                </div>
                                <div class="col-2"> 
                                    <p class="btn-outline-danger">@Model.Members.Count()</p>
                                </div>
                            </div>

                               <hr />

                               <div class="row pt-2 d-flex">
                                    <div class="col-2">
                                        <span>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-folder2-open" viewBox="0 0 16 16">
                                              <path d="M1 3.5A1.5 1.5 0 0 1 2.5 2h2.764c.958 0 1.76.56 2.311 1.184C7.985 3.648 8.48 4 9 4h4.5A1.5 1.5 0 0 1 15 5.5v.64c.57.265.94.876.856 1.546l-.64 5.124A2.5 2.5 0 0 1 12.733 15H3.266a2.5 2.5 0 0 1-2.481-2.19l-.64-5.124A1.5 1.5 0 0 1 1 6.14V3.5zM2 6h12v-.5a.5.5 0 0 0-.5-.5H9c-.964 0-1.71-.629-2.174-1.154C6.374 3.334 5.82 3 5.264 3H2.5a.5.5 0 0 0-.5.5V6zm-.367 1a.5.5 0 0 0-.496.562l.64 5.124A1.5 1.5 0 0 0 3.266 14h9.468a1.5 1.5 0 0 0 1.489-1.314l.64-5.124A.5.5 0 0 0 14.367 7H1.633z"/>
                                            </svg>
                                        </span>
                                    </div>
                                    <div class="col-8 align-content-start justify-content-start text-start">
                                         <!--LINK TO LIST OF MEMBERS(needs to be developed)-->
                                        <a asp-action="AllProjects" asp-controller="Projects">
                                            <p>Projects</p>
                                        </a>
                                    </div>
                                    <div class="col-2"> 
                                        <p class="btn-outline-warning">@Model.Projects.Count()</p>
                                    </div>
                               </div>

                               <hr />

                               <div class="row pt-2 d-flex">
                                    <div class="col-2">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-ticket-perforated" viewBox="0 0 16 16">
                                          <path d="M4 4.85v.9h1v-.9H4Zm7 0v.9h1v-.9h-1Zm-7 1.8v.9h1v-.9H4Zm7 0v.9h1v-.9h-1Zm-7 1.8v.9h1v-.9H4Zm7 0v.9h1v-.9h-1Zm-7 1.8v.9h1v-.9H4Zm7 0v.9h1v-.9h-1Z"/>
                                          <path d="M1.5 3A1.5 1.5 0 0 0 0 4.5V6a.5.5 0 0 0 .5.5 1.5 1.5 0 1 1 0 3 .5.5 0 0 0-.5.5v1.5A1.5 1.5 0 0 0 1.5 13h13a1.5 1.5 0 0 0 1.5-1.5V10a.5.5 0 0 0-.5-.5 1.5 1.5 0 0 1 0-3A.5.5 0 0 0 16 6V4.5A1.5 1.5 0 0 0 14.5 3h-13ZM1 4.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v1.05a2.5 2.5 0 0 0 0 4.9v1.05a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-1.05a2.5 2.5 0 0 0 0-4.9V4.5Z"/>
                                        </svg>
                                    </div>
                                    <div class="col-8 align-content-start justify-content-start text-start">
                                         <!--LINK TO LIST OF MEMBERS(needs to be developed)-->
                                        <a asp-action="AllTickets" asp-controller="Tickets">
                                            <p>Tickets</p>
                                        </a>
                                    </div>
                                    <div class="col-2"> 
                                        <p class="btn-outline-danger">@Model.Tickets.Count()</p>
                                    </div>
                               </div>

                               <hr />

                               <div class="row pt-2 d-flex">
                                    <div class="col-2">
                                        <span>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-people-fill" viewBox="0 0 16 16">
                                              <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
                                              <path fill-rule="evenodd" d="M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z"/>
                                              <path d="M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z"/>
                                            </svg>
                                        </span>
                                    </div>
                                    <div class="col-8 align-content-start justify-content-start text-start">
                                         <!--LINK TO LIST OF MEMBERS(needs to be developed)-->
                                        <a href="# ">
                                            <p>Notifications</p>
                                        </a>
                                    </div>
                                    <div class="col-2"> 
                                        <p class="btn-outline-danger">0</p>
                                    </div>
                               </div>

                            </div>
                    </div>
                </div>
                <div class="col-6 col-lg-3">
                    <div class="app-card app-card-chart shadow-sm h-100">
                        <div class=" p-4 text-center">
                                <h5 class="">Priority Projects</h5>
                        </div> 
                        <div class="app-card-body mt-4  h-100">
                            <div class="chart-container">
                                <canvas height="220" id="chart-pie"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                 <div class="col-6 col-lg-3">
                    <div class="app-card app-card-stat shadow-sm h-100">
                        <div class=" p-4 text-center">
                                <h5 class="">Project Ticket Percentage</h5>
                        </div> 
                        <div class="app-card-body mt-4 p-0 h-100" style="height: 400%">
                            <div class="chart-container">
                                <canvas height="250"  id="chart-doughnut"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--THIRD ROW-->
            <!--PROJECTS BY TICKET PRIORITY COUNTS BAR CHART-->
            <div class="row mb-4">
                <div class="col">
                    <div class="app-card app-card-stat shadow-sm h-100">
                        <div class="card-body p-3 p-lg-4">
                            <canvas id="am-chart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!--FOURTH ROW-->
            <!--Members and Projects Table-->
            <div class="row g-4 mb-4">
                <div class="col-5">
                    <div class="app-card app-card-stat shadow-sm h-100 p-2">
                        <div class="card-body">
                            <div class="p-2 text-center">
                                <h5 class="">Members</h5>
                            </div>
                            <div class="input-group mb-3 ">

                                <span class="input-group-text">Search</span>
                                <input type="text" title="Search" class="form-control" id="membersTableSearchInput" placeholder=""/>

                            </div>
                            <table class="table table-hover">
                                <thead>
                                    <tr class="row table-dark">
                                        <th class="col-2 text-start">Avatar</th>
                                        <th class="col-4 text-start">Name</th>
                                        <th class="col-2 text-start">Projects</th>
                                        <th class="col-4 text-start">Role</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    
                                    @for(int i =0; i < Model.Members.Count(); i++)
                                    {     
                                        <tr class="row">
                                            @if(Model.Members[i].AvatarFileData is null)
                                            {
                                                <td class="col-2 text-start">
                                                    <img class="rounded-circle" style="width:30px;height:30px;" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="Default Avatar"/>
                                                </td>
                                            }
                                            else
                                            {
                                                <td class="col-2 text-start">
                                                    <img class="rounded-circle" style="width:60px;height:60px;" src="data:image/*;base64,@(Convert.ToBase64String(Model.Members[i].AvatarFileData))" alt="@Model.Members[i].FullName's avatar'" />
                                                </td>
                                            }

                                            <td class="col-4 text-start">
                                                @Model.Members[i].FullName
                                            </td>

                                            @if(Model.Members[i].Projects is null)
                                            {
                                                <td class="col-2 text-start">
                                                    0
                                                </td>
                                            }
                                            else
                                            {
                                                <td class="col-2 text-start">
                                                    @Model.Members[i].Projects.Count()
                                                </td>
                                            }

                                            <td class="col-4 text-start">
                                                    @Model.Roles[i]
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-7">
                    <div class="app-card app-card-stat shadow-sm h-100 p-2">
                        <div class="card-body">
                            <div class="p-2 text-center">
                                <h5 class="">Projects</h5>
                            </div>
                            <div class="input-group mb-3 ">

                                <span class="input-group-text">Search</span>
                                <input type="text" title="Search" class="form-control" id="membersTableSearchInput" placeholder=""/>

                            </div>
                            <table class="table table-hover">
                                <thead>
                                    <tr class="row table-dark">
                                        <th class="col-5 text-start">Name</th>
                                        <th class="col-1 text-start">Start Date</th>
                                        <th class="col-1 text-start">End Date</th>
                                        <th class="col-3 text-start">Team</th>
                                        <th class="col-2 text-start">Ticket Count</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach(Project project in Model.Projects)
                                    {     
                                        <tr class="row g-1">
                                            <td class="col-5 row text-start">
                                                <strong class="col-12">@project.Name</strong>

                                                @{
                                                    var projectManager = await ProjectService.GetProjectManagerAsync(project.Id);
                                                }

                                                @if(projectManager is not null)
                                                {
                                                    <p class="m-0">Project Manager: @projectManager.FullName</p>
                                                }
                                                else
                                                {
                                                    <p class="m-0">Project Manager: Not Assigned</p>
                                                }
                                            </td>
                                            
                                            <td class="col-1 text-center">
                                                <p class="text-primary text-center" style="font-size:small">@project.StartDate.ToString("MM-dd-yy")</p>
                                            </td>

                                            <td class="col-1 text-center">
                                                <p class="text-danger text-center" style="font-size:small">@project.EndDate.ToString("MM-dd-yy")</p>
                                            </td>

                                            <td class="col-3 text-center">
                                                @foreach(BTUser member in project.Members)
                                                {
                                                    
                                                    @if(member.AvatarFileData is null)
                                                    { 
                                                        <img class="rounded-circle shadow-sm" style="width:30px;height:30px;margin-left:-15px;outline-color:white;outline-width:thin;" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="Default Avatar"/>
                                                    }
                                                    else
                                                    {
                                                        <img class="rounded-circle shadow-sm btn-outline-light" style="width:60px;height:60px;margin-left:-15px;outline-color:white;outline-width:thick;" src="data:image/*;base64,@(Convert.ToBase64String(member.AvatarFileData))" alt="@member.FullName's avatar'" />
                                                    }
                                                }
                                            </td>

                                            <td class="col-2">
                                                @project.Tickets.Count()
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!--FIFTH ROW-->
            <!--Tickets Table-->
            <div class="row mb-1">
                <div class="col">
                    <div class="app-card app-card-stat shadow-sm h-100 p-2">
                        <div class="card-body">
                            <div class="p-2 text-center">
                                <h5 class="">Tickets</h5>
                            </div>
                            <div class="input-group mb-3 ">

                                <span class="input-group-text">Search</span>
                                <input type="text" title="Search" class="form-control" id="membersTableSearchInput" placeholder=""/>

                            </div>
                            <table class="table table-hover">
                                <thead>
                                    <tr class="row table-dark">
                                        <th class="col-4 text-start">Title</th>
                                        <th class="col-2 text-start">Developer</th>
                                        <th class="col-2 text-start">Status</th>
                                        <th class="col-1 text-start">Priority</th>
                                        <th class="col-1 text-start">Date</th>
                                        <th class="col-2 text-center">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach(Ticket ticket in Model.Tickets)
                                    {     
                                        <tr class="row g-1">
                                            <td class="col-4 text-start"><strong>@ticket.Title</strong></td>
                                            
                                            @*DeveloperUser*@
                                            @if(ticket.DeveloperUserId is not null)
                                            {
                                                <td class="col-2 text-start">@ticket.DeveloperUser.FullName</td>
                                            }
                                            else
                                            {
                                                <td class="col-2 text-start"></td>
                                            }

                                            @*TicketStatus*@
                                            @if(ticket.TicketStatus.Name == "New")
                                            {
                                                <td class="col-2 text-start text-primary">@ticket.TicketStatus.Name</td>
                                            }
                                            else
                                            {
                                                <td class="col-2 text-start">@ticket.TicketStatus.Name</td>
                                            }

                                            @*TicketPriority*@
                                            <td class="col-1 text-start">@ticket.TicketPriority.Name</td>
                                            
                                            @*TicketDate*@
                                            <td class="col-1 text-start">@ticket.Created.ToString("MM-dd-yyyy")</td>

                                            @*Actions*@
                                            <td class="col-2 g-1 text-center">
                                                <a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" class="btn btn-outline-info">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye-fill" viewBox="0 0 16 16">
                                                      <path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z"/>
                                                      <path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z"/>
                                                    </svg>
                                                </a>
                                                @if(User.IsInRole(nameof(Roles.Admin)) || User.IsInRole(nameof(Roles.Admin)))
                                                {
                                                    <a asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id" class="btn btn-outline-warning">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                                          <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                                                          <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
                                                        </svg>
                                                    </a>
                                                    <a asp-action="Archive" asp-controller="Tickets" asp-route-id="@ticket.Id" class="btn btn-outline-danger">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                                          <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"/>
                                                          <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"/>
                                                        </svg>
                                                    </a>
                                                }
                                            </td>
                                        </tr>

                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


@*<div class="container m-30">
    <h1>Dashboard</h1>
    <a href="javascript:void(0)">
        @if(user?.AvatarFileData is not null)
	    {
		    <img class="media-object" src="data:image/*;base64,@(Convert.ToBase64String(user.AvatarFileData))" alt="Avatar"/>
	    }
	    else
	    {
		    <img class="media-object" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" style="width:30px;height:30px;"/>
	    }
    </a>

    <strong>@user.FullName</strong>
    <span class="text-muted" style="font-size:x-small">
        <strong>@Model.Company.Name</strong>
    </span>

    <div>
        <div classxfont-weighteighteightgetainer-fluid">

            <!--Info Pills-->
            <div class="row mt-2">
                <div class="col-lg-3 col-md-6 col-sm-6">
                    <a asp-action="AllProjects" asp-controller="Projects" style="text-decoration:none">
                        <div class="card text-center bg-info">
                            <div class="body">
                                <div class="p-15 text-light">
                                    <h3>@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
                                    <span>Active Projects</span>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-3 col-md-6 col-sm-6">
                    <a asp-action="AllTickets" asp-controller="Tickets" style="text-decoration:none">
                        <div class="card text-center bg-secondary">
                            <div class="body">
                                <div class="p-15 text-light">
                                    <h3>@Model.Tickets.Count</h3>
                                    <span>Total Tickets</span>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>

                <div class="col-lg-3 col-md-6 col-sm-6">
                    <div class="card text-center bg-warning">
                        <div class="body">
                            <div class="p-15 text-light">
                                <h3>@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h3>
                                <span>Unassigned Tickets</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-3 col-md-6 col-sm-6">
                    <div class="card text-center bg-dark">
                        <div class="body">
                            <div class="p-15 text-light">
                                <h3>
                                    @(Model.Projects.Count() + Model.Tickets.Count() + Model.Members.Count())
                                </h3>
                                <span>Total Data</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row gy-2">
                <div class="col-md-12 col">
                    <div class="row col-cols-4 mt-5 bg-secondary">
                        <div class="card col m-1 p-2">
                            <div class="card-body">
                                <h5>Projects by Priority</h5>
                                <p>[Google Charts]</p>
                                <div id="chart3D"></div>
                            </div>
                        </div>
                        <div class="card col m-1 p-2">
                            <div class="card-body">
                                <h5>Project Tickets Count(%)</h5>
                                <p>[Google Charts]</p>
                                <div id="donut"></div>
                            </div>
                        </div>
                        <div class="card col m-1 p-2">
						    <div class="card-body">
							    <h5>Tickets by Priority</h5>
							    <p>[Morris Charts]</p>
                                <!-- Morris: Donut -->
                                <div class="col-md-12">
                                    <div id="legend" class="donut-legend" style="font-size:x-small"></div>
                                </div>
                                <div class="col-md-12">
                                    <div class="chart chart-md" id="morrisTicketPriority"></div>
                                </div>
						    </div>
					    </div>
					    <div class="card col m-1 p-2">
						    <div class="card-body">
							    <h5>Tickets by Status</h5>
                                <p>[ChartJS]</p>
                                <div class="col-md-12">
                                    <!--ChartJS Canvas Tag-->
                                    <canvas id="donutChart"></canvas>
                                </div>
						    </div>
					    </div>

                    </div>
                </div>
            </div>
            <div class="row gy-2">
                <div class="col-sm mt-5 bg-secondary">
                    <div class="card col m-1 p-2">
                        <div class="card-body" style="height:380px">
                            <h5>Project: Tickets vs Developers</h5>
                            <p>[amCharts]</p>
                            <div id="chartdiv"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@
        @*<hr />
        <div class="mt-5">
            <div class="row">
                <div class="col">
                    <div class="bg-secondary">
                        <div class="card m-1 p-2">
                            <div class="card-header">
                                <h2>Projects</h2>
                            </div>
                            <div class="card-body" style="overflow-y:auto;">
                                <table class="table table-hover">
                                    <thead class="">
                                        <tr>
                                            <th>Name</th>
                                            <th>StartDate</th>
                                            <th>EndDate</th>
                                            <th>Priority</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    @foreach (var project in Model.Projects.OrderByDescending(d => d.EndDate))
                                    {
                                        <tr>
                                            <td><a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" style="color:black"><strong>@project.Name</strong></a></td>
                                            <td><span style="font-size:small">@project.StartDate.ToString("MM.dd.yyyy")</span></td>
                                            <td><span style="font-size:small">@project.EndDate.ToString("MM.dd.yyyy")</span></td>
                                            <td><span class="badge bg-dark">@project.ProjectPriority?.Name</span></td>
                                            <td>
                                                <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id"><i class="fs-5 bi-justify"></i></a>
                                            </td>
                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                            <div class="card-footer">

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="bg-secondary">
                        <div class="card m-1 p-2">
                            <div class="card-header">
                                <h2>Tickets</h2>
                            </div>

                            <div class="card-body">
                                <div class="table-responsive" style="overflow-y:auto;height:400px;">
                                    <table class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th>Title</th>
                                                <th>Developer</th>
                                                <th>Status</th>
                                                <th>Priority</th>
                                                <th>Date</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        @foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
                                        {
                                            <tr>
                                                <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
                                                <td>
                                                    @if (ticket.DeveloperUserId != null)
                                                    {
                                                        @ticket.DeveloperUser?.FullName
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-warning text-dark">Unassigned</span>
                                                    }
                                                </td>
                                                @if (ticket.TicketStatus.Name == "New")
                                                {
                                                    <td><span class="badge bg-success rounded-pill">@ticket.TicketStatus.Name </span></td>
                                                }
                                                else
                                                {
                                                    <td><span class="badge bg-secondary rounded-pill">@ticket.TicketStatus.Name</span></td>
                                                }
                                                <td><span class="badge bg-dark">@ticket.TicketPriority.Name </span></td>
                                                <td><span style="font-size:small">@ticket.Created.ToString("MM-dd-yyyy")</span></td>
                                                <td>
                                                    <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
                                            
                                                </td>
                                            </tr>
                                        }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="card-footer">

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="bg-dark">
                        <div class="card m-1 p-2">
                            <div class="card-header">
                                <h2>Members</h2>
                                <hr />
                            </div>
                             <div style="overflow-y:auto;height:400px;">
                                <div class="card-body" style="background-color:antiquewhite">
                                    @foreach(BTUser member in Model.Members)
                                    {
                                        <div class="">
                                            <span style="font-weight:bold">@member.FullName</span>
                                            <h6>@((await RolesService.GetUserRolesAsync(member)).FirstOrDefault())</h6>
                                        </div>
                                        <hr />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>*@
@section scripts{

    <script src="~/chart.js/chart.min.js"></script>

    <!--Charts JS-->
    <script type="text/javascript">
        'use strict';

        /* Chart.js docs: https://www.chartjs.org/ */

        window.chartColors = {
	        green: '#75c181', // rgba(117,193,129, 1)
	        blue: '#5b99ea', // rgba(91,153,234, 1)
	        gray: '#a9b5c9',
	        text: '#252930',
	        border: '#e7e9ed'
        };

        var pieChartConfig = {
	        type: 'pie',
	        data: {
		        datasets: [{
			        data: [
				        @Model.Projects.Where(p => p.ProjectPriority.Name == nameof(BTTicketPriority.Low)).Count(),
				        @Model.Projects.Where(p => p.ProjectPriority.Name == nameof(BTTicketPriority.Medium)).Count(),
				        @Model.Projects.Where(p => p.ProjectPriority.Name == nameof(BTTicketPriority.High)).Count(),
				        @Model.Projects.Where(p => p.ProjectPriority.Name == nameof(BTTicketPriority.Urgent)).Count()
			        ],
			        backgroundColor: [
				        window.chartColors.green,
				        window.chartColors.blue,
				        window.chartColors.gray,

			        ],
			        label: 'Project Priorities'
		        }],
		        labels: [
			        'Low',
			        'Medium',
			        'High',
                    'Urgent'
		        ]
	        },
	        options: {
		        responsive: true,
		        legend: {
			        display: true,
			        position: 'bottom',
			        align: 'center',
		        },

		        tooltips: {
			        titleMarginBottom: 10,
			        bodySpacing: 10,
			        xPadding: 16,
			        yPadding: 16,
			        borderColor: window.chartColors.border,
			        borderWidth: 1,
			        backgroundColor: '#fff',
			        bodyFontColor: window.chartColors.text,
			        titleFontColor: window.chartColors.text,
			
			        /* Display % in tooltip - https://stackoverflow.com/questions/37257034/chart-js-2-0-doughnut-tooltip-percentages */
			        callbacks: {
                        label: function(tooltipItem, data) {
					        //get the concerned dataset
					        var dataset = data.datasets[tooltipItem.datasetIndex];
					        //calculate the total of this data set
					        var total = dataset.data.reduce(function(previousValue, currentValue, currentIndex, array) {
					        return previousValue + currentValue;
					        });
					        //get the current items value
					        var currentValue = dataset.data[tooltipItem.index];
					        //calculate the precentage based on the total and current item, also this does a rough rounding to give a whole number
					        var percentage = Math.floor(((currentValue/total) * 100)+0.5);
					
					        return percentage + "%";
			            },
                    },
			

		        },
	        }
        };

        var doughnutChartConfig = {
	        type: 'doughnut',
	        data: {
		        datasets: [{
			        data: [
				        @foreach(Project project in Model.Projects)
                        {
                            <text>@project.Tickets.Count().ToString(),</text>
                        }
			        ],
			        backgroundColor: [
				        window.chartColors.green,
				        window.chartColors.blue,
				        window.chartColors.gray,
			        ],
			        label: 'Dataset 1'
		        }],
		        labels: [
			       @foreach(Project project in Model.Projects)
                    {
                        <text>"@project.Name",</text>
                    } 
		        ]
	        },
	        options: {
		        responsive: true,
		        legend: {
			        display: true,
			        position: 'bottom',
			        align: 'center',
		        },

		        tooltips: {
			        titleMarginBottom: 10,
			        bodySpacing: 10,
			        xPadding: 16,
			        yPadding: 16,
			        borderColor: window.chartColors.border,
			        borderWidth: 1,
			        backgroundColor: '#fff',
			        bodyFontColor: window.chartColors.text,
			        titleFontColor: window.chartColors.text,
			
			        animation: {
				        animateScale: true,
				        animateRotate: true
			        },
			
			        /* Display % in tooltip - https://stackoverflow.com/questions/37257034/chart-js-2-0-doughnut-tooltip-percentages */
			        callbacks: {
                        label: function(tooltipItem, data) {
					        //get the concerned dataset
					        var dataset = data.datasets[tooltipItem.datasetIndex];
					        //calculate the total of this data set
					        var total = dataset.data.reduce(function(previousValue, currentValue, currentIndex, array) {
					            return previousValue + currentValue;
					        });
					        //get the current items value
					        var currentValue = dataset.data[tooltipItem.index];
					        //calculate the precentage based on the total and current item, also this does a rough rounding to give a whole number
					        var percentage = Math.floor(((currentValue/total) * 100)+0.5);
					
					        return percentage + "%";
			            },
                    },
			

		        },
	        }
        };

       



        // Generate charts on load
        window.addEventListener('load', function(){
	
	        //var lineChart = document.getElementById('chart-line').getContext('2d');
	        //window.myLine = new Chart(lineChart, lineChartConfig);
	
	        //var barChart = document.getElementById('chart-bar').getContext('2d');
	        //window.myBar = new Chart(barChart, barChartConfig);
	
	        var pieChart = document.getElementById('chart-pie').getContext('2d');
	        window.myPie = new Chart(pieChart, pieChartConfig);
	
	        var doughnutChart = document.getElementById('chart-doughnut').getContext('2d');
	        window.myDoughnut = new Chart(doughnutChart, doughnutChartConfig);
	

        });	
    </script>

    <!--Jquery-->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="crossorigin="anonymous"></script>

    <!--AM Charts-->
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>

    <script type="text/javascript">
        $(document).ready(function(){
    	    $.ajax({
		            type: "POST",
		            url: "/Home/AmCharts",
		            data: '{}',
		            contentType: "application/json; charset=utf-8",
		            dataType: "json",
		            success: function (result) {
			            am4core.ready(function() {

				            // Themes begin
				            // Themes end

				            // Create chart instance
				            var chart = am4core.create("am-chart", am4charts.XYChart);


				            // Add data
				            chart.data = result;

				            // Create axes
				            var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
				            categoryAxis.dataFields.category = "project";
				            categoryAxis.numberFormatter.numberFormat = "#";
				            categoryAxis.renderer.inversed = true;
				            categoryAxis.renderer.grid.template.location = 0;
				            categoryAxis.renderer.cellStartLocation = 0.1;
				            categoryAxis.renderer.cellEndLocation = 0.9;

				            var  valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
				            valueAxis.renderer.opposite = true;

				            // Create series
				            function createSeries(field, name) {
				                var series = chart.series.push(new am4charts.ColumnSeries());
				                series.dataFields.valueX = field;
				                series.dataFields.categoryY = "project";
				                series.name = name;
				                series.columns.template.tooltipText = "{name}: [bold]{valueX}[/]";
				                series.columns.template.height = am4core.percent(100);
				                series.sequencedInterpolation = true;

				                var valueLabel = series.bullets.push(new am4charts.LabelBullet());
				                valueLabel.label.text = "{valueX}";
				                valueLabel.label.horizontalCenter = "left";
				                valueLabel.label.dx = 10;
				                valueLabel.label.hideOversized = false;
				                valueLabel.label.truncate = false;

				                var categoryLabel = series.bullets.push(new am4charts.LabelBullet());
				                categoryLabel.label.text = "{name}";
				                categoryLabel.label.horizontalCenter = "right";
				                categoryLabel.label.dx = -10;
				                categoryLabel.label.fill = am4core.color("#fff");
				                categoryLabel.label.hideOversized = false;
				                categoryLabel.label.truncate = false;
				            }

				            createSeries("tickets", "Tickets");
				            createSeries("developers", "Devs");

			            }); 
		            },
		            failure: function (result) {
			            alert(result.d);
		            },
		            error: function (result) {
			            alert(result.d);
		            }
	        });
        });
    </script>

    <!--Table Search-->
    <script type="text/javascript">
        let searchMembersTable = () => {
            document.getElementById("#membersTableSearchInput").onkeyup(function()
            {
                var value = $(this).val()
            });
        }
    </script>
       @* 
        <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
        <script>

	        var morrisDonutData = [{
		        label: "Low",
		        value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Low)).Count()
	        }, {
		        label: "Medium",
		        value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Medium)).Count()
	        }, {
		        label: "High",
		        value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.High)).Count()
	        }, {
		        label: "Urgent",
		        value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriority.Urgent)).Count()
	        }];


	        /*
	        Morris: Donut
	        */
	        if ($('#morrisTicketPriority').get(0)) {
		        var donutChart = Morris.Donut({
			        resize: true,
			        element: 'morrisTicketPriority',
			        data: morrisDonutData,
			        colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
		        });

		        donutChart.options.data.forEach(function(label, i) {
			        var legendItem = $('<span></span>').text( label['label'] + ": " +label['value']).prepend('<span>&nbsp;</span>');
			        legendItem.find('span')
			          .css('backgroundColor', donutChart.options.colors[i])
			          .css('width', '20px')
			          .css('display', 'inline-block')
			          .css('margin', '10px');
			        $('#legend').append(legendItem)
		        });
	        };
        </script>

        
        <script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
        <script>
            var donutChartCanvas = $('#donutChart').get(0).getContext('2d');
            var donutData = {
                labels: [
                    '@nameof(BTTicketStatus.Development)',
                    '@nameof(BTTicketStatus.New)',
                    '@nameof(BTTicketStatus.Resolved)',
                    '@nameof(BTTicketStatus.Testing)'
                ],
                datasets: [
                    {
                        data: [
                            @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.Development)).Count(),
                            @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.New)).Count(),
                            @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.Resolved)).Count(),
                            @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(BTTicketStatus.Testing)).Count()
                        ],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
					        'rgba(54, 162, 235, 0.2)',
					        'rgba(255, 206, 86, 0.2)',
					        'rgba(75, 192, 192, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
					        'rgba(54, 162, 235, 1)',
					        'rgba(255, 206, 86, 1)',
					        'rgba(75, 192, 192, 1)'
                        ]
                    }
                ]
            };

            var donutOptions = {
                maintainAspectRatio: false,
                responsive: true
            };

            //Create pie or donut chart
            new Chart(donutChartCanvas, {
                type: 'doughnut',
                data: donutData,
                options: donutOptions
        
            });
        </script>

        
        
        *@

}